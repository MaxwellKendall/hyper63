openapi: 3.0.3
info:
  title: hyper63 
  description: >
    ![logo](https://hyper63.com/favicon-96x96.png)

    # Welcome to hyper63 

    A service-gateway

    hyper63 provides a restful api to common application services implemented with adapters 

      * cache [implemented]
      * data [wip]
      * storage [wip]
      * hooks [wip]

    ## Getting started

    hyper63 is currently stored on hub.docker.com
    you can quickly get started playing with atlas
    with docker


    create a new directory:


    ```
    mkdir atlas
    cd atlas
    ```


    create a `docker-compose.yml` file


    ```yaml
    version: "3.8"
    services:
      web:
        image: "hyper63/atlas:unstable"
        environment:
          REDIS: redis://redis:6379
          COUCH: http://admin:password@couchdb:5984
          MINIO: http://minio:minio123@minio:9000
        ports:
          - "6363:6363"
        depends_on:
          - redis
      redis:
        image: "redis:alpine"
        volumes:
          - ".:/data"
      couchdb:
        image: "couchdb"
        environment:
          COUCHDB_USER: "admin"
          COUCHDB_PASSWORD: "password"
        volumes:
          - ".:/opt/couchdb/data"
      minio:
          image: minio/minio
          environment:
            MINIO_ACCESS_KEY: minio
            MINIO_SECRET_KEY: minio123
          volumes:
            - "./data:/data"
          ports:
            - "9000:9000"
          command: server /data
    ```


    launch using `docker-compose`


    ```

    docker-compose up -d

    docker exec -it atlas_couchdb_1 \
      curl -X POST -H "Content-Type: application/json" \ 
      localhost:5984/_cluster_setup \
      -d '{"action":"enable_single_node", "bind_address":"0.0.0.0"}' \
      -u 'admin:password'
    ```


    [source code](https://github.com/hyper63/atlas)

  contact:
    url: "https://hyper63.com"
    email: tom@hyper63.com
    name: hyper63
  license:
    name: Apache License 2.0
    url: "https://github.com/hyper63/atlas/blob/main/LICENSE"
  version: "1.0"
  termsOfService: "https://hyper63.com/termsofuse.text"
servers:
  - description: Development Server
    url: "http://localhost:6363"
paths:
  /:
    get:
      description: server health response
      responses:
        "200":
          description: successful health response
          content:
            application/json:
              schema:
                properties:
                  name:
                    description: name of service
                    type: string
  /cache:
    get:
      description: cache module information
      responses:
        "200":
          description: cache module info
          content:
            application/json:
              schema:
                properties:
                  name:
                    description: name of module
                    type: string
                  version:
                    description: module version
                    type: string
                  stores:
                    description: list of active stores
                    type: array
                  status:
                    description: stability of module
                    type: string
                    enum:
                      - stable
                      - unstable
                    default: unstable
  "/cache/{name}":
    put:
      description: create cache store
      parameters:
        - name: name
          in: path
          description: name of cache store
          required: true
          schema:
            type: string
      responses:
        "201":
          description: successfully created store
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
        "500":
          description: could not create store
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                    default: false
    delete:
      description: delete cache store
      parameters:
        - name: name
          in: path
          description: name of cache store
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successfully deleted store
    post:
      description: create new cache document
      parameters:
        - name: name
          in: path
          description: name of cache store
          required: true
          schema:
            type: string
      requestBody:
        description: cache document
        required: true
        content:
          application/json:
            schema:
              properties:
                key:
                  type: string
                value:
                  type: object
                ttl:
                  type: string
      responses:
        "201":
          description: successfully create cache doc
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                    default: true
                  doc:
                    type: object
        "500":
          description: internal error occured
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                    default: false
                  msg:
                    type: string
  "/cache/{name}/_query":
    get:
      description: query cache with key match pattern
      parameters:
        - name: name
          in: path
          description: name of cache store
          required: true
          schema:
            type: string
        - name: pattern
          in: query
          description: pattern to match keys
          required: false
          schema:
            type: string
      responses:
        "200":
          description: successfully responde with list of docs
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                    default: true
                  docs:
                    type: array
        "500":
          description: error occured with query
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                    default: false
                  msg:
                    type: string
  "/cache/{name}/{key}":
    get:
      description: get cache key from store
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
        - name: key
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: successful response
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                    default: true
                  doc:
                    type: object
        "500":
          description: error
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                    default: false
                  msg:
                    type: string
    put:
      description: update cache document
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
        - name: key
          in: path
          schema:
            type: string
          description: cache document
          required: true
      requestBody:
        content:
          application/json:
            schema:
              properties:
                key:
                  type: string
                value:
                  type: object
                ttl:
                  type: string
      responses:
        "200":
          description: successfully create cache doc
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                    default: true
                  doc:
                    type: object
        "500":
          description: internal error occured
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                    default: false
                  msg:
                    type: string
    delete:
      description: remove cache document
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successfully create cache doc
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                    default: true
                  doc:
                    type: object
        "500":
          description: internal error occured
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                    default: false
                  msg:
                    type: string
  /data:
    get:
      description: data module information
      responses:
        200:
          description: data module info
          content:
            application/json:
              schema:
                properties:
                  name:
                    description: module name
                    type: string
        500:
          description: service not available
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
  /data/{name}:
    put:
      description: create database
      parameters:
        - name: name
          in: path
          description: name of database
          required: true
          schema:
            type: string
      responses:
        201:
          description: successfully created database
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
        500:
          description: server error
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  msg:
                    type: string
    delete:
      description: remove database
      parameters:
        - name: name
          in: path
          description: name of database
          required: true
          schema:
            type: string
      responses:
        200:
          description: successfully removed database
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
        500:
          description: could not remove database
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
    post:
      description: create document
      parameters:
        - name: name
          in: path
          description: name of database
          required: true
          schema:
            type: string
      requestBody:
        description: json body that requires submitting
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        201:
          description: successfully created document
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  id:
                    type: string
        500:
          description: server error
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  msg:
                    type: string
  /data/{name}/_query:
    post:
      description: query database
      parameters:
        - name: name
          in: path
          required: true
          description: name of database
          schema:
            type: string
      requestBody:
        description: json query document
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        201:
          description: successful result
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  docs:
                    type: array
        500:
          description: error trying to run query
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  msg:
                    type: string

  /data/{name}/{id}:
    get:
      description: get document
      parameters:
        - name: name
          in: path
          required: true
          description: database name
          schema:
            type: string
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
      responses:
        200:
          description: get document
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  document:
                    type: object
        500:
          description: server error
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  msg:
                    type: string
    put:
      description: update document
      parameters:
        - name: name
          in: path
          description: database name
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: document id
          required: true
          schema:
            type: string
      requestBody:
        description: json body that requires submitting
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        201:
          description: update document
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  id:
                    type: string
        500:
          description: error updating document
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  msg:
                    type: string
    delete:
      description: delete document
      parameters:
        - name: name
          in: path
          description: database name
          required: true
          schema:
            type: string
        - name: id
          description: document id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: deleted document
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  id:
                    type: string
        500:
          description: error trying to delete document
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  id:
                    type: string
  /storage:
    get:
      description: storage module healthcheck
      responses:
        200:
          description: healthcheck json
          content:
            application/json:
              schema:
                type: object
  /storage/{name}:
    put:
      description: make storage bucket
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
        500:
          description: error
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  msg:
                    type: string
    delete:
      description: remove storage bucket - all items must be removed
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
        500:
          description: error
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  msg:
                    type: string

    post:
      description: upload file to storage
      requestBody:
        description: placeholder
        content:
          multipart/form-data:
            schema:
              required:
                - file
              properties:
                file:
                  description: form-data file buffer
                  type: object
                path:
                  description: path to store file
                  type: string
      responses:
        201:
          description: successful upload
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
        500:
          description: error with upload
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                  msg:
                    type: string
  /storage/{name}/_list:
    get:
      description: list items in storage bucket
  /storage/{name}/{object}:
    get:
      description: download file from storage
    delete:
      description: delete file from storage
